{"name": "Проверка клика по кнопке показать/скрыть пароль делает поле активным — подсвечивает его\"", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: Element <div class=\"input__icon input__icon-action\"> is not clickable at point (1061,376) because another element <div class=\"Modal_modal_overlay__x2ZCr\"> obscures it\nStacktrace:\nRemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nWebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:193:5\nElementClickInterceptedError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:337:5\nwebdriverClickElement@chrome://remote/content/marionette/interaction.sys.mjs:176:11\ninteraction.clickElement@chrome://remote/content/marionette/interaction.sys.mjs:135:11\nclickElement@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:204:29\nreceiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:84:31", "trace": "self = <test_recovery_page.TestRecoveryPage object at 0x0000020627A55700>, driver = <selenium.webdriver.firefox.webdriver.WebDriver (session=\"bf4627f3-c421-4d27-93e9-4317ba78ce4b\")>\n\n    @allure.title('Проверка клика по кнопке показать/скрыть пароль делает поле активным — подсвечивает его\"')\n    @allure.description('''\n                        1. Переход на страницу сервиса;\n                        2. Переход на страницу личного кабинета\n                        3. Клик по кнопке \"Восстановить пароль\"\n                        4. Заполнение поля \"Email\"\n                        5. Клик на кнопку \"Восстановить\"\n                        6. Заполнить поле \"Пароль\"\n                        7. Клик на кнопку \"Показать\"\n                        ''')\n    def test_checking_the_backlight_of_the_password_field(self, driver):\n        main_page = MainPage(driver)\n        login_page = LoginPage(driver)\n        recovery_page = RecoveryPage(driver)\n        person_data = Person().create_data_correct_user()\n        main_page.move_to_personal_account_btn_and_click()\n        login_page.click_recovery_btn()\n        recovery_page.send_email_to_email_field(person_data.get(\"email\"))\n        recovery_page.click_recovery_btn()\n>       assert recovery_page.check_active_password_field(person_data.get(\"password\"))\n\ntests\\test_recovery_page.py:63: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\recovery_page.py:41: in check_active_password_field\n    self.click_button(RecoveryPageLocators.show_btn)\npages\\base_page.py:26: in click_button\n    self.driver.find_element(*locator).click()\n..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000020627F7AFF0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"Element <div class=\\\\\"input__icon i...sys.mjs:204:29\\\\nreceiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:84:31\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: Element <div class=\"input__icon input__icon-action\"> is not clickable at point (1061,376) because another element <div class=\"Modal_modal_overlay__x2ZCr\"> obscures it\nE       Stacktrace:\nE       RemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nE       WebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:193:5\nE       ElementClickInterceptedError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:337:5\nE       webdriverClickElement@chrome://remote/content/marionette/interaction.sys.mjs:176:11\nE       interaction.clickElement@chrome://remote/content/marionette/interaction.sys.mjs:135:11\nE       clickElement@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:204:29\nE       receiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:84:31\n\n..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: ElementClickInterceptedException"}, "description": "\n                        1. Переход на страницу сервиса;\n                        2. Переход на страницу личного кабинета\n                        3. Клик по кнопке \"Восстановить пароль\"\n                        4. Заполнение поля \"Email\"\n                        5. Клик на кнопку \"Восстановить\"\n                        6. Заполнить поле \"Пароль\"\n                        7. Клик на кнопку \"Показать\"\n                        ", "steps": [{"name": "Генерация email, password, name пользователя", "status": "passed", "start": 1714816852774, "stop": 1714816852851}, {"name": "Переход к кнопке \"Личный Кабинет\" и клик на нее", "status": "passed", "start": 1714816852851, "stop": 1714816853178}, {"name": "Клик на кнопку \"Восстановить пароль\"", "status": "passed", "start": 1714816853178, "stop": 1714816853464}, {"name": "Заполнение формы Email", "status": "passed", "parameters": [{"name": "email", "value": "'rbelozerov@example.org'"}], "start": 1714816853464, "stop": 1714816853530}, {"name": "Клик по кнопке Восстановить", "status": "passed", "start": 1714816853530, "stop": 1714816853772}, {"name": "Проверка подсветки поля Пароль", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: Element <div class=\"input__icon input__icon-action\"> is not clickable at point (1061,376) because another element <div class=\"Modal_modal_overlay__x2ZCr\"> obscures it\nStacktrace:\nRemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nWebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:193:5\nElementClickInterceptedError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:337:5\nwebdriverClickElement@chrome://remote/content/marionette/interaction.sys.mjs:176:11\ninteraction.clickElement@chrome://remote/content/marionette/interaction.sys.mjs:135:11\nclickElement@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:204:29\nreceiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:84:31\n\n", "trace": "  File \"C:\\Users\\user\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"C:\\Users\\user\\Desktop\\Diplom_3\\pages\\recovery_page.py\", line 41, in check_active_password_field\n    self.click_button(RecoveryPageLocators.show_btn)\n  File \"C:\\Users\\user\\Desktop\\Diplom_3\\pages\\base_page.py\", line 26, in click_button\n    self.driver.find_element(*locator).click()\n  File \"C:\\Users\\user\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 94, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"C:\\Users\\user\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\user\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 347, in execute\n    self.error_handler.check_response(response)\n  File \"C:\\Users\\user\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "steps": [{"name": "Заполнение поля Пароль", "status": "passed", "parameters": [{"name": "password", "value": "'^SE@nuNoa5'"}], "start": 1714816853772, "stop": 1714816853804}], "parameters": [{"name": "password", "value": "'^SE@nuNoa5'"}], "start": 1714816853772, "stop": 1714816853824}], "parameters": [{"name": "driver", "value": "'firefox'"}], "start": 1714816852774, "stop": 1714816853826, "uuid": "29ebdc41-ae73-41d7-b73d-faa209fc86e4", "historyId": "c255ec6fc6a51347da01df5222c7c9ed", "testCaseId": "123aeec46da91b47ce1bb7e6f76450fd", "fullName": "tests.test_recovery_page.TestRecoveryPage#test_checking_the_backlight_of_the_password_field", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_recovery_page"}, {"name": "subSuite", "value": "TestRecoveryPage"}, {"name": "host", "value": "WIN-B72I5GSJN4S"}, {"name": "thread", "value": "5472-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_recovery_page"}]}